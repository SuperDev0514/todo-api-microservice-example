# For demo purposes
services:
  api:
    build: 
      context: .
      dockerfile: ./build/rest-server/Dockerfile
    ports:
      - "9234:9234"
    command: rest-server -env /api/env.example
    environment:
      DATABASE_HOST: postgres
      JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"
      VAULT_ADDRESS: "http://vault:8300"
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
    # docker-compose run api migrate -path /api/migrations/ -database postgres://user:password@postgres:5432/dbname?sslmode=disable up
    depends_on:
      - postgres
      - vault
      - prometheus
      - jaeger
      - elasticsearch
  prometheus:
    image: prom/prometheus:v2.25.2
    ports:
      - "9090:9090"
    volumes:
      - ./docs/prometheus.yml:/etc/prometheus/prometheus.yml
  jaeger:
    image: jaegertracing/all-in-one:1.22.0
    ports:
      - "16686:16686"
      - "14268:14268"
  postgres:
    image: postgres:12.5-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
  vault:
    image: vault:1.6.2
    ports:
      - "8300:8300"
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8300"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
