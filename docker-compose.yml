# For demo purposes
services:
  rest-server:
    build: 
      context: .
      dockerfile: ./build/rest-server/Dockerfile
    ports:
      - "9234:9234"
    command: rest-server -env /api/env.example
    environment:
      DATABASE_HOST: postgres
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"
      VAULT_ADDRESS: "http://vault:8300"
      KAFKA_HOST: "kafka"
      MEMCACHED_HOST: "memcached:11211"
      # RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
    # docker-compose run rest-server migrate -path /api/migrations/ -database postgres://user:password@postgres:5432/dbname?sslmode=disable up
    depends_on:
      - postgres
      - vault
      - prometheus
      - jaeger
      - elasticsearch
      - redis
      - memcached
      # - zookeeper
      # - kafka
      # - rabbitmq

  prometheus:
    image: prom/prometheus:v2.25.2
    ports:
      - "9090:9090"
    volumes:
      - ./docs/prometheus.yml:/etc/prometheus/prometheus.yml
  jaeger:
    image: jaegertracing/all-in-one:1.22.0
    ports:
      - "16686:16686"
      - "14268:14268"
  postgres:
    image: postgres:12.5-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
  vault:
    image: vault:1.6.2
    ports:
      - "8300:8300"
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8300"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
  # elasticsearch-indexer-rabbitmq:
  #   build:
  #     context: .
  #     dockerfile: ./build/elasticsearch-indexer-rabbitmq/Dockerfile
  #   command: elasticsearch-indexer -env /api/env.example
  #   environment:
  #     JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"
  #     VAULT_ADDRESS: "http://vault:8300"
  #     ELASTICSEARCH_URL: "http://elasticsearch:9200"
  #     RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
  #   depends_on:
  #     - vault
  #     - prometheus
  #     - jaeger
  #     - elasticsearch
  #     - rabbitmq
  # rabbitmq:
  #   image: rabbitmq:3.8.14-management-alpine
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  # elasticsearch-indexer-kafka:
  #   build:
  #     context: .
  #     dockerfile: ./build/elasticsearch-indexer-kafka/Dockerfile
  #   command: elasticsearch-indexer -env /api/env.example
  #   environment:
  #     JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"
  #     VAULT_ADDRESS: "http://vault:8300"
  #     ELASTICSEARCH_URL: "http://elasticsearch:9200"
  #     KAFKA_HOST: "kafka"
  #   depends_on:
  #     - vault
  #     - prometheus
  #     - jaeger
  #     - elasticsearch
  #     - kafka
  #     - zookeeper
  # zookeeper:
  #   image: wurstmeister/zookeeper:3.4.6
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   image: wurstmeister/kafka:2.13-2.7.0
  #   ports:
  #     - "9092:9092"
  #   links:
  #     - zookeeper
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_ADVERTISED_PORT: 9092
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     KAFKA_CREATE_TOPICS: 'tasks:1:1'
  elasticsearch-indexer-redis:
    build:
      context: .
      dockerfile: ./build/elasticsearch-indexer-redis/Dockerfile
    command: elasticsearch-indexer -env /api/env.example
    environment:
      JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"
      VAULT_ADDRESS: "http://vault:8300"
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      REDIS_URL: "redis:6379"
    depends_on:
      - vault
      - prometheus
      - jaeger
      - elasticsearch
      - redis
  redis:
    image: redis:6.2.3-alpine3.13
    ports:
      - "6379:6379"
  memcached:
    image: memcached:1.6.9-alpine
    ports:
      - "11211:11211"
